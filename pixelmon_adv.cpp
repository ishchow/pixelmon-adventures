/*
ard_template.cpp

Authors:
Ishaat Chowdhury	Section: EA1
Sam Wu              Section: EA2

Description:

*/

#include <Arduino.h>
#include <Adafruit_GFX.h>    // Core graphics library
#include <Adafruit_ST7735.h> // Hardware-specific library
#include <SPI.h>
#include <SD.h>

#include "lcd_image.h"
#include <avr/pgmspace.h> // For PROGMEM

// Display pins:
// standard U of A library settings, assuming Atmel Mega SPI pins
#define SD_CS    5 // Chip select line for SD card
#define TFT_CS   6 // Chip select line for TFT display
#define TFT_DC   7 // Data/command line for TFT
#define TFT_RST  8 // Reset Line for TFT (or connect to +5V)

// #define JOY_VERT_ANALOG 0
// #define JOY_HORIZ_ANALOG 1
// #define JOY_DEADZONE 64
// #define JOY_CENTRE 512
// #define JOY_SPEED 5
// #define JOY_SEL 9

// #define MILLIS_PER_FRAME 50 // 20fps
// #define STEPS_PER_PIXEL 64

#define TFT_WIDTH 128
#define TFT_HEIGHT 160

Adafruit_ST7735 tft = Adafruit_ST7735(TFT_CS, TFT_DC, TFT_RST);
Sd2Card card;

const unsigned char bulb [] PROGMEM = {
	// 'bulb'
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x30, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x7c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xfc, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x8f, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x87, 0xf0, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x01, 0x03, 0xf8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x41, 0xfc, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x80, 0xfc, 0x00, 0x00, 0x00, 0x00, 0x00, 0x05, 0x00, 0xfc, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x05, 0x01, 0xff, 0x80, 0x00, 0x00, 0x00, 0x00, 0x09, 0x03, 0xff, 0xc0, 0x00, 0x00,
	0x00, 0x00, 0x08, 0x9e, 0xff, 0x90, 0x00, 0x00, 0x00, 0x00, 0x0c, 0xfc, 0xff, 0x88, 0x00, 0x00,
	0x00, 0x00, 0x07, 0xf8, 0xff, 0xc8, 0x00, 0x00, 0x00, 0x00, 0x03, 0xc1, 0xff, 0xec, 0x00, 0x00,
	0x00, 0x00, 0x3d, 0x81, 0xfd, 0xfc, 0x00, 0x00, 0x00, 0x00, 0x0b, 0x83, 0xff, 0xfc, 0x00, 0x00,
	0x00, 0x00, 0x03, 0x08, 0xff, 0xfc, 0x00, 0x00, 0x00, 0x00, 0x02, 0x08, 0x7f, 0xfc, 0x00, 0x00,
	0x00, 0x00, 0x20, 0x46, 0x3f, 0xf0, 0x00, 0x00, 0x00, 0x00, 0x30, 0x47, 0x7f, 0xc0, 0x00, 0x00,
	0x00, 0x00, 0x28, 0x07, 0xff, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x2c, 0x03, 0xff, 0xe0, 0x00, 0x00,
	0x00, 0x00, 0x28, 0x03, 0xff, 0xf8, 0x00, 0x00, 0x00, 0x00, 0x2c, 0x8f, 0xff, 0xe8, 0x00, 0x00,
	0x00, 0x00, 0x10, 0x3f, 0xe3, 0xd0, 0x00, 0x00, 0x00, 0x00, 0x1f, 0xf0, 0x41, 0xe0, 0x00, 0x00,
	0x00, 0x00, 0x07, 0xf9, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0xc7, 0x80, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0xff, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3f, 0x80, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x29, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1e, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

const int BULB_WIDTH = 64;
const int BULB_HEIGHT = 64;

void setup() {
    init();
    Serial.begin(9600);

    Serial.print("Initializing SD card...");
    if (!SD.begin(SD_CS)) {
        Serial.println("failed!");
        return;
    }

    tft.initR(INITR_BLACKTAB);   // initialize a ST7735R chip, green tab
    tft.fillScreen(ST7735_BLACK);
    // tft.print("I am bulbosaur!\n");

    Serial.println("OK!");
}

int main() {
    setup();

    // Animation to move back and forth
    uint8_t direction = 1; // 1: fwd, -1: reverse
    int x = 0;
    int lastx = 0;
    const int MOVE_SPEED = 5;
    while (true) {
        if (x == 0) direction = 1;
        else if (x == TFT_WIDTH - BULB_WIDTH) direction = -1;

        if (x != lastx) {
            tft.fillRect(lastx, 0, BULB_WIDTH, BULB_HEIGHT, ST7735_BLACK);
            tft.drawBitmap(x, 0, bulb, BULB_WIDTH, BULB_HEIGHT, ST7735_WHITE);
            lastx = x;
        }

        if (direction == 1) x = constrain(x + MOVE_SPEED, 0, TFT_WIDTH - BULB_WIDTH);
        else  x = constrain(x - MOVE_SPEED, 0, TFT_WIDTH - BULB_WIDTH);
    }

    Serial.end();
    return 0;
}
